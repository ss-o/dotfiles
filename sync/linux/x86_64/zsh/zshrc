# ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑ ⸨ Zsh ⸩
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

(){ source "${HOME}/.config/zi/init.zsh" || exit 1; } && zzinit

COMPLETION_WAITING_DOTS=true
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1

: ${HISTFILE:=${ZI[CACHE_DIR]}/.history}
[[ -e $HISTFILE ]] || { command mkdir -p ${HISTFILE:h}; command touch $HISTFILE; }
[[ -w $HISTFILE ]] && typeset -gx SAVEHIST=440000 HISTSIZE=441000 HISTFILE

(( $+commands[vivid] )) && { typeset -gx LS_COLORS="$(vivid generate molokai)" 2> /dev/null; }
[[ -r ${HOME}/.zshrc_local ]] && source ${HOME}/.zshrc_local

# ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑ ⸨ Private functions ⸩
typeset -gA DOTFILES
DOTFILES[ZSH]="${HOME}/.dotfiles/sync/linux/x86_64/zsh"

if [[ -z ${fpath[(re)${DOTFILES[ZSH]/functions}]} ]]; then
  typeset -gxU fpath FPATH
  fpath=( "${DOTFILES[ZSH]}/functions" "${fpath[@]}" )
fi

(){
  setopt local_options typeset_silent
  typeset _sni_ _fnc_
  for _sni_ in ${DOTFILES[ZSH]}/snippets/*.zsh; do source $_sni_; done
  for _fnc_ in ${DOTFILES[ZSH]}/functions/*; do autoload -Uz ${_fnc_:t}; done
}

typeset -gx EDITOR=$(set-cmd vim micro nano)
# DEVOPS ============================================================================================================ #
zi is-snippet for id-as'gcloud-completion' \
  if'[[ -d ~/.local/share/google-cloud-sdk/bin \
    && -f ~/.local/share/google-cloud-sdk/completion.zsh.inc ]]' \
  atinit'[[ -n ${path[(re)${HOME}/.local/share/google-cloud-sdk/bin]} ]] \
    || builtin source ~/.local/share/google-cloud-sdk/path.zsh.inc' \
  ~/.local/share/google-cloud-sdk/completion.zsh.inc

zi has'svn' blockf for svn \
  id-as'user:aliases' multisrc'{general,systemd/systemd}.zsh' pick'/dev/null' \
    https://github.com/ss-o/dotfiles/trunk/sync/linux/x86_64/zsh/aliases/user
# ANNEX ============================================================================================================== #
zi light-mode compile'functions/.*za-*~*.zwc' for z-shell/z-a-meta-plugins @annexes
# META-PLUGINS ======================================================================================================= #
zi lucid for light-mode \
  skip'ripgrep peco tig bat exa hyperfine fd' @console-tools \
  skip'dircolors-materia' @console-style \
  skip'F-Sy-H' @z-shell @romkatv \
  skip'fzf fzy peco skim' @fuzzy \
  @zsh-users+fast
# OH-MY-ZSH PLUGINS ================================================================================================== #
zi-turbo '0a' light-mode for \
  atload"unalias grv g" OMZP::git \
    if'[[ -d ~/.gnupg ]]' OMZP::gpg-agent \
    if'[[ -d ~/.ssh ]]' silent OMZP::ssh-agent
# PLUGINS ============================================================================================================ #
zi-turbo '0a' for \
  binary sbin'bin/*' \
    z-shell/nb \
  binary from"gh-r" sbin \
    ajeetdsouza/zoxide \
  has'zoxide' \
    z-shell/zsh-zoxide \
  has'lsd' atinit'AUTOCD=1' \
    z-shell/zsh-lsd \
  atinit'YSU_MESSAGE_POSITION=after' \
    MichaelAquilina/zsh-you-should-use

#zi load ss-o/zsh-functions

reload_z() {
  autoload -U zrecompile
	for f in ~/.zshrc $ZI[ZCOMPDUMP_PATH]; do
		zrecompile -p $f && command rm -f $f.zwc.old
	done
}

reverse-text() { builtin print "${(j::)${(@Oa)${(s::):-$1}}}"; }

encode64() { (( $# == 0 )) && { command cat | base64; } || { builtin print -n $1 | base64; }; }

encodefile64() { (( $# == 0 )) && { print "Missing file"; } || { base64 -i $1 -o $1.txt; print "${1} encoded as ${1}.txt"; }; }

decode64() {
  if [[ $# -eq 0 ]]; then
    cat | base64 --decode
  else
    printf '%s' $1 | base64 --decode
  fi
}

history-clean() { (( $+commands[truncate] )) && { truncate -s 0 $HISTFILE || return 1; }; }

[[ -f ~/.ss-o ]] && source ~/.ss-o
source "${DOTFILES[ZSH]}/themes/p10k-robbyrussell.zsh"
